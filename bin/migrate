#!/usr/bin/env node

var debug = require('debug')('ioc-migrate')
var fs = require('fs')
var path = require('path')
var program = require('commander')

var packageJson = require('../package.json')
var runner = require('../lib/runner')(fs).run
var getAppAdapter = require('../lib/getAppAdapter')

program
  .version(packageJson.version)
  .option('-c, --configFile [path]', 'Path to your app\'s migration config file (default: /path/to/app/schema/iocmigrateConfig.js)')
  .option('-d, --down', 'To run the migrations down')
  .option('-t, --target [version]', 'Migrate from the current state to this migration')
  .option('-v, --verbose', 'Turn on verbose mode')
  .parse(process.argv)

var log = program.verbose ? console.log : debug
var migrateConfigPath = (typeof(program.configFile) === 'undefined' ? path.join(process.cwd(), 'schema', 'iocmigrateConfig.js') : program.configFile).replace('.js', '')
var up = !program.down

if (!up && !program.target) {
  console.error('OOPS!  You cannot migrate down with supplying a target (-t).  Otherwise, you could trash your entire database.  That would be sub-optimal.')
}

var target = up ? 99999999999999 : 0  // This module will be good for another 8000 years, almost
if (program.target) {
  target = parseInt(program.target)
}

runner(
  getAppAdapter(migrateConfigPath)
, log
, { up: up, targetVersion: target }
, function allDone(err, results) {
    console.log('Migrating up?', up)
    if (err) {
      console.error(err)
      console.error(results)
      process.exit(1)
    } else {
      console.log(results)
      process.exit(0)
    }
  }
)
